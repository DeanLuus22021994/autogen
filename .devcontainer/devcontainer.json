// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-outside-of-docker-compose
{
	"name": "AutoGen devcontainer",
	"dockerComposeFile": "docker-compose.yml",
	"service": "devcontainer",
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",

	// Host requirements
	"hostRequirements": {
		"cpus": 4,
		"memory": "8gb",
		"storage": "32gb",
		"gpu": "optional"
	},

	// Docker-specific optimization settings
	"initializeCommand": [
		"powershell.exe -Command \"if (-not (Test-Path ${localWorkspaceFolder}\\.docker-cache)) { New-Item -ItemType Directory -Path ${localWorkspaceFolder}\\.docker-cache -Force }\"",
		"powershell.exe -Command \"if (-not (Test-Path $env:TEMP\\autogen-deps)) { New-Item -ItemType Directory -Path $env:TEMP\\autogen-deps -Force }\""
	],

	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
		"CACHE_MOUNT_POINT": "/tmp/autogen-deps",
		"BUILDKIT_PROGRESS": "plain",
		"DOCKER_BUILDKIT": "1",
		"COMPOSE_DOCKER_CLI_BUILD": "1"
	},

	"features": {
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
			"moby": true,
			"installDockerBuildx": true,
			"version": "latest",
			"dockerDashComposeVersion": "none"
		},
		"ghcr.io/elanhasson/devcontainer-features/dotnet-aspire-daily:1": {},
		"ghcr.io/devcontainers/features/azure-cli:1": {},
		"ghcr.io/devcontainers/features/git:1": {},
		"ghcr.io/devcontainers/features/dotnet:2": {
			"installUsingApt": true,
			"version": "latest"
		},
		"ghcr.io/azure/azure-dev/azd:0": {},
		"ghcr.io/devcontainers/features/python:1": {
			"installTools": true,
			"optimize": true,
			"version": "3.11"
		}
	},
	
	// Performance optimization settings
	"otherPortsAttributes": {
		"onAutoForward": "silent"
	},
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "bash .devcontainer/startup.sh",

	// Use 'postStartCommand' for operations after container is started
	"postStartCommand": "echo 'Container ready for development' > /dev/null",

	// GPU passthrough environment variables for development
	"containerEnv": {
		"NVIDIA_VISIBLE_DEVICES": "all",
		"NVIDIA_DRIVER_CAPABILITIES": "compute,utility"
	},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "root",
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-python.python",
				"ms-python.debugpy",
				"GitHub.copilot",
				"ms-dotnettools.csdevkit",
				"ms-dotnettools.vscodeintellicode-csharp",
				"github.vscode-github-actions",
				"ms-azuretools.vscode-docker",
				"streetsidesoftware.code-spell-checker",
				"redhat.vscode-yaml",
				"ms-vscode.powershell"
			],
			"settings": {
				"files.autoSave": "afterDelay",
				"editor.formatOnSave": true,
				"python.linting.enabled": true,
				"python.formatting.provider": "black",
				"dotnet.server.useOmnisharp": true,
				"editor.bracketPairColorization.enabled": true,
				"terminal.integrated.defaultProfile.linux": "bash",
				"files.watcherExclude": {
					"**/.git/objects/**": true,
					"**/.git/subtree-cache/**": true,
					"**/node_modules/**": true,
					"**/.venv/**": true,
					"**/__pycache__/**": true,
					"**/.*/**": true
				},
				"files.exclude": {
					"**/__pycache__": true,
					"**/.pytest_cache": true,
					"**/*.egg-info": true
				},
				"search.exclude": {
					"**/dist": true,
					"**/.venv": true,
					"**/node_modules": true
				}
			}
		}
	},
	
	// Performance optimization flags
	"waitFor": "updateContentCommand",
	"updateContentCommand": "echo 'Container is ready!' > /tmp/container-ready"
}
